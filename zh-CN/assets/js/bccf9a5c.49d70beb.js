"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2383],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var c=t(96540);const u={},a=c.createContext(u);function r(e){const n=c.useContext(a);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(u):e.components||u:r(e.components),c.createElement(a.Provider,{value:n},e.children)}},50319:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>i});const c=JSON.parse('{"id":"application-development/dsl/udf/udaf","title":"UDAF Introduction","description":"The UDAF (User Defined Aggregate Function) aggregate multi-rows to a single value.","source":"@site/versions/version-current/docs-en/source/5.application-development/2.dsl/4.udf/2.udaf.md","sourceDirName":"5.application-development/2.dsl/4.udf","slug":"/application-development/dsl/udf/udaf","permalink":"/geaflow-website/zh-CN/docs/application-development/dsl/udf/udaf","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"UDF Introduction","permalink":"/geaflow-website/zh-CN/docs/application-development/dsl/udf/udf"},"next":{"title":"UDTF Introduction","permalink":"/geaflow-website/zh-CN/docs/application-development/dsl/udf/udtf"}}');var u=t(74848),a=t(28453);const r={},o="UDAF Introduction",l={},i=[{value:"Interface",id:"interface",level:2},{value:"Example",id:"example",level:2}];function s(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(n.header,{children:(0,u.jsx)(n.h1,{id:"udaf-introduction",children:"UDAF Introduction"})}),"\n",(0,u.jsx)(n.p,{children:"The UDAF (User Defined Aggregate Function) aggregate multi-rows to a single value."}),"\n",(0,u.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,u.jsx)(n.pre,{children:(0,u.jsx)(n.code,{className:"language-java",children:"public abstract class UserDefinedFunction implements Serializable {\n\n   /**\n     * Init method for the user defined function.\n     */\n    public void open(FunctionContext context) {\n    }\n\n    /**\n     * Close method for the user defined function.\n     */\n    public void close() {\n    }\n}\n\npublic abstract class UDAF<InputT, AccumT, OutputT> extends UserDefinedFunction {\n\n    /**\n     * Create aggregate accumulator for aggregate function to store the aggregate value.\n     */\n    public abstract AccumT createAccumulator();\n\n    /**\n     * Accumulate the input to the accumulator.\n     */\n    public abstract void accumulate(AccumT accumulator, InputT input);\n\n    /**\n     * Merge the accumulator iterator to the accumulator.\n     * @param accumulator The accumulator to merged to.\n     * @param its The accumulator iterators to merge from.\n     */\n    public abstract void merge(AccumT accumulator, Iterable<AccumT> its);\n\n    /**\n     * Reset the accumulator to init value.\n     */\n    public abstract void resetAccumulator(AccumT accumulator);\n\n    /**\n     * Get aggregate function result from the accumulator.\n     */\n    public abstract OutputT getValue(AccumT accumulator);\n\n}\n\n"})}),"\n",(0,u.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,u.jsx)(n.pre,{children:(0,u.jsx)(n.code,{className:"language-java",children:"public class AvgDouble extends UDAF<Double, Accumulator, Double> {\n\n    @Override\n    public Accumulator createAccumulator() {\n        return new Accumulator();\n    }\n\n    @Override\n    public void accumulate(Accumulator accumulator, Double input) {\n        if (null != input) {\n            accumulator.sum += input;\n            accumulator.count ++;\n        }\n    }\n\n    @Override\n    public void merge(Accumulator merged, Iterable<Accumulator> accumulators) {\n        for (Accumulator accumulator : accumulators) {\n            merged.sum += accumulator.sum;\n            merged.count += accumulator.count;\n        }\n    }\n\n    @Override\n    public void resetAccumulator(Accumulator accumulator) {\n        accumulator.sum = 0.0;\n        accumulator.count = 0L;\n    }\n\n    @Override\n    public Double getValue(Accumulator accumulator) {\n        return accumulator.count == 0 ? null : \n\t\t\t(accumulator.sum / (double) accumulator.count);\n    }\n\n    public static class Accumulator implements Serializable {\n        public double sum = 0.0;\n        public long count = 0;\n    }\n}\n"})}),"\n",(0,u.jsx)(n.pre,{children:(0,u.jsx)(n.code,{className:"language-sql",children:"CREATE Function my_avg AS 'com.antgroup.geaflow.dsl.udf.table.agg.AvgDouble';\n\nSELECT my_avg(age) from user;\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,u.jsx)(n,{...e,children:(0,u.jsx)(s,{...e})}):s(e)}}}]);