"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4783],{28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>l});var s=t(96540);const r={},o=s.createContext(r);function a(n){const e=s.useContext(o);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),s.createElement(o.Provider,{value:e},n.children)}},58195:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"application-development/connector/pulsar","title":"Pulsar Connector Introduction","description":"GeaFlow supports reading data from Pulsar and writing data to Pulsar. The currently supported Pulsar version is 2.8.1.","source":"@site/versions/version-current/docs-en/source/5.application-development/3.connector/9.pulsar.md","sourceDirName":"5.application-development/3.connector","slug":"/application-development/connector/pulsar","permalink":"/geaflow-website/zh-CN/docs/application-development/connector/pulsar","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Hudi Connector Introduction","permalink":"/geaflow-website/zh-CN/docs/application-development/connector/hudi"},"next":{"title":"User Defined Connector","permalink":"/geaflow-website/zh-CN/docs/application-development/connector/udc"}}');var r=t(74848),o=t(28453);const a={},l="Pulsar Connector Introduction",i={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Options",id:"options",level:2},{value:"Example1",id:"example1",level:2},{value:"Example2",id:"example2",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"pulsar-connector-introduction",children:"Pulsar Connector Introduction"})}),"\n",(0,r.jsx)(e.p,{children:"GeaFlow supports reading data from Pulsar and writing data to Pulsar. The currently supported Pulsar version is 2.8.1."}),"\n",(0,r.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE pulsar_table (\n  id BIGINT,\n  name VARCHAR,\n  age INT\n) WITH (\n\ttype='pulsar',\n    `geaflow.dsl.pulsar.servers` = 'localhost',\n    `geaflow.dsl.pulsar.port` = '6650',\n    `geaflow.dsl.pulsar.topic` = 'persistent://test/test_pulsar_connector/topic_read',\n    `geaflow.dsl.pulsar.subscriptionInitialPosition` = 'latest'\n)\n"})}),"\n",(0,r.jsx)(e.h2,{id:"options",children:"Options"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Key"}),(0,r.jsx)(e.th,{children:"Required"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"geaflow.dsl.pulsar.servers"}),(0,r.jsx)(e.td,{children:"yes"}),(0,r.jsx)(e.td,{children:"The pulsar bootstrap servers list."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"geaflow.dsl.pulsar.port"}),(0,r.jsx)(e.td,{children:"yes"}),(0,r.jsx)(e.td,{children:"The port of pulsar bootstrap servers."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"geaflow.dsl.pulsar.topic"}),(0,r.jsx)(e.td,{children:"yes"}),(0,r.jsx)(e.td,{children:"Pulsar topic"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"geaflow.dsl.pulsar.subscriptionInitialPosition"}),(0,r.jsx)(e.td,{children:"No"}),(0,r.jsx)(e.td,{children:"The initial position of consumer, default is 'latest'."})]})]})]}),"\n",(0,r.jsx)(e.p,{children:"Note: Pulsar connector cannot specify a partition topic. If you want to consume messages for a certain partition, please select the sub topic name of the partition topic."}),"\n",(0,r.jsx)(e.h2,{id:"example1",children:"Example1"}),"\n",(0,r.jsxs)(e.p,{children:["Example 1 is from pulsar to ",(0,r.jsx)(e.code,{children:"topic_read"})," data and write it to the ",(0,r.jsx)(e.code,{children:"topic_write"}),"."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE pulsar_source (\n    id BIGINT,\n    name VARCHAR,\n    age INT\n) WITH (\n    type='pulsar',\n    `geaflow.dsl.pulsar.servers` = 'localhost',\n    `geaflow.dsl.pulsar.port` = '6650',\n    `geaflow.dsl.pulsar.topic` = 'persistent://test/test_pulsar_connector/topic_read',\n    `geaflow.dsl.pulsar.subscriptionInitialPosition` = 'latest'\n    );\nCREATE TABLE pulsar_sink (\n    id BIGINT,\n    name VARCHAR,\n    age INT\n) WITH (\n    type='pulsar',\n    `geaflow.dsl.pulsar.servers` = 'localhost',\n    `geaflow.dsl.pulsar.port` = '6650',\n    `geaflow.dsl.pulsar.topic` = 'persistent://test/test_pulsar_connector/topic_write'\n    );\nINSERT INTO pulsar_sink\nSELECT * FROM pulsar_source;\n"})}),"\n",(0,r.jsx)(e.h2,{id:"example2",children:"Example2"}),"\n",(0,r.jsx)(e.p,{children:"Similarly, we can also perform a fourth degree loop detection."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"set geaflow.dsl.window.size = 1;\nset geaflow.dsl.ignore.exception = true;\n\nCREATE GRAPH IF NOT EXISTS pulsar_modern (\n  Vertex person (\n    id bigint ID,\n    name varchar\n  ),\n  Edge knows (\n    srcId bigint SOURCE ID,\n    targetId bigint DESTINATION ID,\n    weight double\n  )\n) WITH (storeType='rocksdb',\n  shardCount = 1\n);\n\nCREATE TABLE IF NOT EXISTS pulsar_source (\n    text varchar\n) WITH (\n    type='pulsar',\n    `geaflow.dsl.column.separator` = '#',\n    `geaflow.dsl.pulsar.servers` = 'localhost',\n    `geaflow.dsl.pulsar.port` = '6650',\n    `geaflow.dsl.pulsar.topic` = 'persistent://test/test_pulsar_connector/topic_read',\n    `geaflow.dsl.pulsar.subscriptionInitialPosition` = 'latest'\n    );\n\nCREATE TABLE IF NOT EXISTS pulsar_sink (\n    a_id bigint,\n    b_id bigint,\n    c_id bigint,\n    d_id bigint,\n    a1_id bigint\n) WITH (\n    type='pulsar',\n    `geaflow.dsl.pulsar.servers` = 'localhost',\n    `geaflow.dsl.pulsar.port` = '6650',\n    `geaflow.dsl.pulsar.topic` = 'persistent://test/test_pulsar_connector/topic_write'\n    );\n\nUSE GRAPH pulsar_modern;\n\nINSERT INTO pulsar_modern.person(id, name)\nSELECT\n    cast(trim(split_ex(t1, ',', 0)) as bigint),\n    split_ex(trim(t1), ',', 1)\nFROM (\n    Select trim(substr(text, 2)) as t1\n    FROM pulsar_source\n    WHERE substr(text, 1, 1) = '.'\n    );\n\nINSERT INTO pulsar_modern.knows\nSELECT\n    cast(split_ex(t1, ',', 0) as bigint),\n    cast(split_ex(t1, ',', 1) as bigint),\n    cast(split_ex(t1, ',', 2) as double)\nFROM (\n    Select trim(substr(text, 2)) as t1\n    FROM pulsar_source\n    WHERE substr(text, 1, 1) = '-'\n    );\n\nINSERT INTO pulsar_sink\nSELECT\n    a_id,\n    b_id,\n    c_id,\n    d_id,\n    a1_id\nFROM (\n      MATCH (a:person) -[:knows]->(b:person) -[:knows]-> (c:person)\n          -[:knows]-> (d:person) -> (a:person)\n          RETURN a.id as a_id, b.id as b_id, c.id as c_id, d.id as d_id, a.id as a1_id\n    );\n"})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}}}]);