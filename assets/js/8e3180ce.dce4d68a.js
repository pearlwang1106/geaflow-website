"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5094],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var d=t(96540);const r={},s=d.createContext(r);function o(e){const n=d.useContext(s);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),d.createElement(s.Provider,{value:n},e.children)}},54136:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"application-development/connector/jdbc","title":"JDBC Connector Introduction","description":"The JDBC Connector is contributed by the community and supports both reading and writing operations.","source":"@site/versions/version-current/docs-en/source/5.application-development/3.connector/4.jdbc.md","sourceDirName":"5.application-development/3.connector","slug":"/application-development/connector/jdbc","permalink":"/geaflow-website/docs/application-development/connector/jdbc","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Console Connector Introduction","permalink":"/geaflow-website/docs/application-development/connector/console"},"next":{"title":"Hive Connector Introduction","permalink":"/geaflow-website/docs/application-development/connector/hive"}}');var r=t(74848),s=t(28453);const o={},i="JDBC Connector Introduction",l={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Options",id:"options",level:2},{value:"Example",id:"example",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"jdbc-connector-introduction",children:"JDBC Connector Introduction"})}),"\n",(0,r.jsx)(n.p,{children:"The JDBC Connector is contributed by the community and supports both reading and writing operations."}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE jdbc_table (\n  id BIGINT,\n  name VARCHAR,\n  age INT\n) WITH (\n\ttype='jdbc',\n    geaflow.dsl.jdbc.driver = 'org.h2.Driver',\n    geaflow.dsl.jdbc.url = 'jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1',\n    geaflow.dsl.jdbc.username = 'h2_user',\n    geaflow.dsl.jdbc.password = 'h2_pwd',\n    geaflow.dsl.jdbc.table.name = 'source_table'\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"geaflow.dsl.jdbc.driver"}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"The JDBC driver."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"geaflow.dsl.jdbc.url"}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"The database URL."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"geaflow.dsl.jdbc.username"}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"The database username."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"geaflow.dsl.jdbc.password"}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"The database password."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"geaflow.dsl.jdbc.table.name"}),(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"The table name."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"geaflow.dsl.jdbc.partition.num"}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"The JDBC partition number, default 1."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"geaflow.dsl.jdbc.partition.column"}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"The JDBC partition column. Default value is 'id'."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"geaflow.dsl.jdbc.partition.lowerbound"}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"The lowerbound of JDBC partition, just used to decide the partition stride, not for filtering the rows in table."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"geaflow.dsl.jdbc.partition.upperbound"}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"The upperbound of JDBC partition, just used to decide the partition stride, not for filtering the rows in table."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"set geaflow.dsl.jdbc.driver = 'org.h2.Driver';\nset geaflow.dsl.jdbc.url = 'jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1';\nset geaflow.dsl.jdbc.username = 'h2_user';\nset geaflow.dsl.jdbc.password = 'h2_pwd'; \n\nCREATE TABLE jdbc_source_table (\n  id BIGINT,\n  name VARCHAR,\n  age INT\n) WITH (\n\ttype='jdbc',\n    geaflow.dsl.jdbc.table.name = 'source_table',\n);\n\nCREATE TABLE jdbc_sink_table (\n  id BIGINT,\n  name VARCHAR,\n  age INT\n) WITH (\n\ttype='jdbc',\n    geaflow.dsl.jdbc.table.name = 'sink_table'\n);\n\nINSERT INTO jdbc_sink_table\nSELECT * FROM jdbc_source_table;\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);